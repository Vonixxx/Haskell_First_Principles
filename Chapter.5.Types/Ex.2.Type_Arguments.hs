--------------------
-- Type Arguments --
---------------------------------------------------------
-- Given a function and its type, say what type        --
-- results from applying some or all of the arguments. --
---------------------------------------------------------

-------
-- 1 --
----------------------------------------------------------------------
-- If the type of f is a -> a -> a -> a, then the type of f 'a' is? --
----------------------------------------------------------------------
-- a) a -> a -> a          --
-- b) x -> x -> x -> x     --
-- c) a -> a -> a -> Char  --
-- d) Char -> Char -> Char --
-----------------------------

-- d

-------
-- 2 --
-------------------------------------------------------------------------------
-- If the type of g is a -> b -> c -> b, then the type of g 0 'c' "woot" is? --
-------------------------------------------------------------------------------
-- a) Int            --
-- b) Char           --
-- c) String         --
-- d) Char -> String --
-----------------------

-- b

-------
-- 3 --
-------------------------------------------------------------------------------------
-- If the type of h is (Num a, Num b) => a -> b -> b, then the type of h 1.0 2 is? --
-------------------------------------------------------------------------------------
-- a) Double
-- b) Integer
-- c) Num b => b
-- d) Integral b => b

-- c

-------
-- 4 --
-------------------------------------------------------------------------------------------------
-- If the type of h is (Num a, Num b) => a -> b -> b,then the type of h 1 (5.5 :: Double) is? --
-------------------------------------------------------------------------------------------------
-- a) Double            --
-- b) Integer           --
-- c) Num b => b        --
-- d) Fractional b => b --
--------------------------

-- a

-------
-- 5 --
---------------------------------------------------------------
-- If the type of f is (Ord a, Eq b) => a -> b -> a,         --
-- then the type of f "keyboard" "has the word keyboard" is? --
---------------------------------------------------------------
-- a) b                   --
-- b) [Char]              --
-- c) Eq b => b           --
-- d) b -> [Char]         --
-- e) Eq b => b -> [Char] --
----------------------------

-- a

-------
-- 6 --
-----------------------------------------------------------------------------------------
-- If the type of g is (Ord a, Eq b) => a -> b -> a, then the type of g "keyboard" is? --
-----------------------------------------------------------------------------------------
-- a) b                   --
-- c) [Char]              --
-- b) Eq b => b           --
-- d) b -> [Char]         --
-- e) Eq b => b -> [Char] --
----------------------------

-- e

-------
-- 7 --
-----------------------------------------------------------------------------------
-- If the type of h is (Ord a, Num b) => a -> b -> a, then the type of h 1 2 is? --
-----------------------------------------------------------------------------------
-- a) a                   --
-- b) Int                 --
-- c) Integer             --
-- d) Num a => a          --
-- e) Ord a => a          --
-- f) (Num a, Ord a) => a --
----------------------------

-- f

-------
-- 8 --
------------------------------------------------------------------------------------------------
-- If the type of k is (Ord a, Num b) => a -> b -> a, then the type of k 1 (2 :: Integer) is? --
------------------------------------------------------------------------------------------------
-- a) a                   --
-- b) Int                 --
-- c) Integer             --
-- d) Num a => a          --
-- e) Ord a => a          --
-- f) (Num a, Ord a) => a --
----------------------------

-- f

-------
-- 9 --
------------------------------------------------------------------------------------------------
-- If the type of z is (Ord a, Num b) => a -> b -> a, then the type of z (1 :: Integer) 2 is? --
------------------------------------------------------------------------------------------------
-- a) a                   --
-- b) Integer             --
-- c) Num a => a          --
-- d) Ord a => a          --
-- e) (Num a, Ord a) => a --
----------------------------

-- b
